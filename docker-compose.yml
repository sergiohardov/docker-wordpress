services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - "./.tmp/database:/var/lib/mysql"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: mysql # link to service name
      MYSQL_USERNAME: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}

  php:
    build:
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    restart: always
    volumes:
      - "./.tmp/wordpress:/var/www/html"
      - "./docker/php/custom.php.ini:/usr/local/etc/php/conf.d/custom.ini"
      - "./plugin:/var/www/html/wp-content/plugins/${WP_PLUGIN_NAME}"
      - "./theme:/var/www/html/wp-content/themes/${WP_THEME_NAME}"

  nginx:
    image: nginx:stable-alpine
    restart: always
    depends_on:
      - php
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - "./.tmp/wordpress:/var/www/html"
      - "./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro"

  wp-cli:
    image: wordpress:cli
    depends_on:
      - mysql
    environment:
      WORDPRESS_VERSION: ${WP_VERSION}
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_URL: ${WP_URL}
      WORDPRESS_TITLE: ${WP_TITLE}
      WORDPRESS_LOGIN: ${WP_LOGIN}
      WORDPRESS_PASSWORD: ${WP_PASSWORD}
      WORDPRESS_EMAIL: ${WP_EMAIL}
    volumes:
      - "./.tmp/wordpress:/var/www/html"
      - "./docker/wp-cli/custom.php.ini:/usr/local/etc/php/conf.d/custom.ini"

  composer:
    image: composer:${COMPOSER_VERSION}
    container_name: composer
    working_dir: /app
    volumes:
      - ./:/app

  node:
    image: node:${NODE_VERSION}
    container_name: node
    working_dir: /app
    volumes:
      - ./:/app

